[
  {
    "objectID": "HW8.html",
    "href": "HW8.html",
    "title": "ST558_2024_HW8_bike data",
    "section": "",
    "text": "Today we are using a bike share data for the basic modeling practise. The introoduction of this data set is accessed through this website: (Seoul Bike Sharing Demand - UCI Machine Learning Repository). To our relieve there is no missing values.\nThe aim of the project is to predict the rental bike count at each hour of a day based on the weather condition, season, holiday and the hour. Since bike usage is sensitive to weather condition it is presumable that certain weather condition, plus the day condition (weekday/weekend, holiday, etc.) is likely to dictate the bike usage in a particular time of the day.\nLet’s load some packages and read in the data first:\n\nlibrary (tidyverse)\n\nWarning: package 'ggplot2' was built under R version 4.3.3\n\n\nWarning: package 'tidyr' was built under R version 4.3.3\n\n\nWarning: package 'readr' was built under R version 4.3.3\n\n\nWarning: package 'dplyr' was built under R version 4.3.3\n\n\nWarning: package 'stringr' was built under R version 4.3.3\n\n\nWarning: package 'lubridate' was built under R version 4.3.3\n\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nlibrary (dplyr)\nBikeshare &lt;- read_csv (\"data//SeoulBikeData.csv\")\n\nRows: 8760 Columns: 14\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (4): Date, Seasons, Holiday, Functioning Day\ndbl (10): Rented Bike Count, Hour, Temperature(C), Humidity(%), Wind speed (...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\nBikeshare\n\n# A tibble: 8,760 × 14\n   Date      `Rented Bike Count`  Hour `Temperature(C)` `Humidity(%)`\n   &lt;chr&gt;                   &lt;dbl&gt; &lt;dbl&gt;            &lt;dbl&gt;         &lt;dbl&gt;\n 1 1/12/2017                 254     0             -5.2            37\n 2 1/12/2017                 204     1             -5.5            38\n 3 1/12/2017                 173     2             -6              39\n 4 1/12/2017                 107     3             -6.2            40\n 5 1/12/2017                  78     4             -6              36\n 6 1/12/2017                 100     5             -6.4            37\n 7 1/12/2017                 181     6             -6.6            35\n 8 1/12/2017                 460     7             -7.4            38\n 9 1/12/2017                 930     8             -7.6            37\n10 1/12/2017                 490     9             -6.5            27\n# ℹ 8,750 more rows\n# ℹ 9 more variables: `Wind speed (m/s)` &lt;dbl&gt;, `Visibility (10m)` &lt;dbl&gt;,\n#   `Dew point temperature(C)` &lt;dbl&gt;, `Solar Radiation (MJ/m2)` &lt;dbl&gt;,\n#   `Rainfall(mm)` &lt;dbl&gt;, `Snowfall (cm)` &lt;dbl&gt;, Seasons &lt;chr&gt;, Holiday &lt;chr&gt;,\n#   `Functioning Day` &lt;chr&gt;\n\n\nUnexpectedly the first trial to read in data failed. It turned out the file contains some special character that the R does not understand/not encoded by the R-recognizable way.\n\n\n\nAfter changing the format manually everything is fine. We first transform the date to the date format\n\nBikeshare$Date &lt;- as.Date (Bikeshare$Date, format = \"%d/%m/%Y\")\n\nNow the date are in the right form and can do some visualization around the time data, which we will work on that later. Missing values are creating a headache for exploratory data analysis, so we want to check for missingness, evaluate and take measures to eliminate the missing values.\n\ncolSums(is.na(Bikeshare))\n\n                    Date        Rented Bike Count                     Hour \n                       0                        0                        0 \n          Temperature(C)              Humidity(%)         Wind speed (m/s) \n                       0                        0                        0 \n        Visibility (10m) Dew point temperature(C)  Solar Radiation (MJ/m2) \n                       0                        0                        0 \n            Rainfall(mm)            Snowfall (cm)                  Seasons \n                       0                        0                        0 \n                 Holiday          Functioning Day \n                       0                        0 \n\nlength(unique(Bikeshare$Seasons))\n\n[1] 4\n\n\nLuckily for us, there is no missing data in the data set. To check for the number of unique values in each character column, use the command table(), and if everything is right turn the character variables into factors.\n\ntable(Bikeshare$Seasons)\n\n\nAutumn Spring Summer Winter \n  2184   2208   2208   2160 \n\ntable (Bikeshare$Holiday)\n\n\n   Holiday No Holiday \n       432       8328 \n\ntable (Bikeshare$`Functioning Day`)\n\n\n  No  Yes \n 295 8465 \n\nBikeshare &lt;- Bikeshare |&gt; mutate (SeasonsF = as.factor (Seasons),\n                                  HolidayF = as.factor (Holiday)) |&gt;\n  filter (`Functioning Day` == \"Yes\") |&gt;\n  select (-Seasons, -Holiday, -`Functioning Day`)\n\nWe filtered the data so that all days recorded were “functional day” and factorized variables “Seasons” and “Holiday”. Since we wanted to summarize across the hours to simplify the data (thus eliminating the need to adjust for the hour variable), we will hereby factorize date as well.\n\nBikeshare &lt;- Bikeshare |&gt; mutate (DateF = as.factor (Date))\n\nNow we are ready to do some EDA.\n\n\n\nLet’s first do summary over some variables. We already counted the number of each unique factors of the categorical variables, we could summarize them as below. First let’s take a look at the variables of the modified data set\n\nstr (Bikeshare)\n\ntibble [8,465 × 14] (S3: tbl_df/tbl/data.frame)\n $ Date                    : Date[1:8465], format: \"2017-12-01\" \"2017-12-01\" ...\n $ Rented Bike Count       : num [1:8465] 254 204 173 107 78 100 181 460 930 490 ...\n $ Hour                    : num [1:8465] 0 1 2 3 4 5 6 7 8 9 ...\n $ Temperature(C)          : num [1:8465] -5.2 -5.5 -6 -6.2 -6 -6.4 -6.6 -7.4 -7.6 -6.5 ...\n $ Humidity(%)             : num [1:8465] 37 38 39 40 36 37 35 38 37 27 ...\n $ Wind speed (m/s)        : num [1:8465] 2.2 0.8 1 0.9 2.3 1.5 1.3 0.9 1.1 0.5 ...\n $ Visibility (10m)        : num [1:8465] 2000 2000 2000 2000 2000 ...\n $ Dew point temperature(C): num [1:8465] -17.6 -17.6 -17.7 -17.6 -18.6 -18.7 -19.5 -19.3 -19.8 -22.4 ...\n $ Solar Radiation (MJ/m2) : num [1:8465] 0 0 0 0 0 0 0 0 0.01 0.23 ...\n $ Rainfall(mm)            : num [1:8465] 0 0 0 0 0 0 0 0 0 0 ...\n $ Snowfall (cm)           : num [1:8465] 0 0 0 0 0 0 0 0 0 0 ...\n $ SeasonsF                : Factor w/ 4 levels \"Autumn\",\"Spring\",..: 4 4 4 4 4 4 4 4 4 4 ...\n $ HolidayF                : Factor w/ 2 levels \"Holiday\",\"No Holiday\": 2 2 2 2 2 2 2 2 2 2 ...\n $ DateF                   : Factor w/ 353 levels \"2017-12-01\",\"2017-12-02\",..: 1 1 1 1 1 1 1 1 1 1 ...\n\n\nFor the variable “Rented Bike Count”, “Rainfall (mm)”, “Snowfall (cm)”, we would like to get summary data based on the summed value in a day (added up all the hour data). For other weather-related data, we would like to get a summary of the mean across all the hours in a day.\n\nrentalcount_precipitation_summary &lt;-Bikeshare |&gt; group_by(Date) |&gt;\n  summarize (across(c(`Rented Bike Count`,`Rainfall(mm)`,`Snowfall (cm)`),\n             .fns = list (\"Daily\" = sum)))\nsummary(rentalcount_precipitation_summary)\n\n      Date            Rented Bike Count_Daily Rainfall(mm)_Daily\n Min.   :2017-12-01   Min.   :  977           Min.   : 0.000    \n 1st Qu.:2018-02-27   1st Qu.: 6967           1st Qu.: 0.000    \n Median :2018-05-28   Median :18563           Median : 0.000    \n Mean   :2018-05-28   Mean   :17485           Mean   : 3.576    \n 3rd Qu.:2018-08-24   3rd Qu.:26285           3rd Qu.: 0.500    \n Max.   :2018-11-30   Max.   :36149           Max.   :95.500    \n Snowfall (cm)_Daily\n Min.   : 0.000     \n 1st Qu.: 0.000     \n Median : 0.000     \n Mean   : 1.863     \n 3rd Qu.: 0.000     \n Max.   :78.700     \n\nweather_summary &lt;- Bikeshare |&gt; group_by(Date) |&gt;\n  summarize (across (c(`Temperature(C)`, `Humidity(%)`,`Wind speed (m/s)`,`Visibility (10m)`,`Dew point temperature(C)`,`Solar Radiation (MJ/m2)`),\n                     .fns = list (\"Daily\" = mean)))\nsummary (weather_summary)\n\n      Date            Temperature(C)_Daily Humidity(%)_Daily\n Min.   :2017-12-01   Min.   :-14.738      Min.   :22.25    \n 1st Qu.:2018-02-27   1st Qu.:  3.304      1st Qu.:47.58    \n Median :2018-05-28   Median : 13.738      Median :57.17    \n Mean   :2018-05-28   Mean   : 12.776      Mean   :58.17    \n 3rd Qu.:2018-08-24   3rd Qu.: 22.592      3rd Qu.:67.71    \n Max.   :2018-11-30   Max.   : 33.742      Max.   :95.88    \n Wind speed (m/s)_Daily Visibility (10m)_Daily Dew point temperature(C)_Daily\n Min.   :0.6625         Min.   : 214.3         Min.   :-27.750               \n 1st Qu.:1.3042         1st Qu.:1087.0         1st Qu.: -5.188               \n Median :1.6583         Median :1557.8         Median :  4.612               \n Mean   :1.7261         Mean   :1434.0         Mean   :  3.954               \n 3rd Qu.:1.9542         3rd Qu.:1874.3         3rd Qu.: 14.921               \n Max.   :4.0000         Max.   :2000.0         Max.   : 25.038               \n Solar Radiation (MJ/m2)_Daily\n Min.   :0.02917              \n 1st Qu.:0.28333              \n Median :0.56500              \n Mean   :0.56773              \n 3rd Qu.:0.82000              \n Max.   :1.21667              \n\n\nWe could combine the two data set into one.\n\nBikesharenew &lt;- left_join(rentalcount_precipitation_summary,\n                          weather_summary)\n\nJoining with `by = join_by(Date)`\n\nstr(Bikesharenew)\n\ntibble [353 × 10] (S3: tbl_df/tbl/data.frame)\n $ Date                          : Date[1:353], format: \"2017-12-01\" \"2017-12-02\" ...\n $ Rented Bike Count_Daily       : num [1:353] 9539 8523 7222 8729 8307 ...\n $ Rainfall(mm)_Daily            : num [1:353] 0 0 4 0.1 0 1.3 0 0 0 4.1 ...\n $ Snowfall (cm)_Daily           : num [1:353] 0 0 0 0 0 8.6 10.4 0 0 32.5 ...\n $ Temperature(C)_Daily          : num [1:353] -2.454 1.325 4.875 -0.304 -4.458 ...\n $ Humidity(%)_Daily             : num [1:353] 45.9 62 81.5 52.5 36.4 ...\n $ Wind speed (m/s)_Daily        : num [1:353] 1.54 1.71 1.61 3.45 1.11 ...\n $ Visibility (10m)_Daily        : num [1:353] 1871 1471 456 1363 1959 ...\n $ Dew point temperature(C)_Daily: num [1:353] -13.55 -5.72 1.88 -9.93 -17.43 ...\n $ Solar Radiation (MJ/m2)_Daily : num [1:353] 0.2487 0.2637 0.1254 0.2829 0.0358 ...\n\n\nBased on the merged data set, we will do more work – To better visualize the distribution of variables, histogram seemed to be the choice.\n\nlibrary (gridExtra)\n\n\nAttaching package: 'gridExtra'\n\n\nThe following object is masked from 'package:dplyr':\n\n    combine\n\nrentalcount &lt;- ggplot (Bikesharenew, aes (x = `Rented Bike Count_Daily`)) +\n  geom_histogram(color = \"black\", fill = \"red3\", alpha = 0.5) +\n  labs (x = \"Daily rented Bike Count\")\n\nrainfall &lt;- ggplot (Bikesharenew, aes (x = `Rainfall(mm)_Daily`)) +\n  geom_histogram(color = \"black\", fill = \"lightgreen\", alpha = 0.5) +\n  labs (x = \"Daily rainfall (mm)\")\n\nsnowfall &lt;- ggplot (Bikesharenew, aes (x = Bikesharenew$`Snowfall (cm)_Daily`)) +\n  geom_histogram(color = \"brown\", fill = \"white\", alpha = 0.5) +\n  labs (x = \"Daily snowfall (cm)\")\n\nTemperature &lt;- ggplot (Bikesharenew, aes (x = Bikesharenew$`Temperature(C)_Daily`)) +\n  geom_histogram(color = \"black\", fill = \"orange\", alpha = 0.5) +\n  labs (x = \"Daily avg Temp (oC)\")\n\nHumidity &lt;- ggplot (Bikesharenew, aes (x = Bikesharenew$`Humidity(%)_Daily`)) +\n  geom_histogram(color = \"black\", fill = \"lightblue\", alpha = 0.5) +\n  labs (x = \"Daily avg Humidity (%)\")\n\nwindspeed &lt;- ggplot (Bikesharenew, aes (x = Bikesharenew$`Wind speed (m/s)_Daily`)) +\n  geom_histogram(color = \"lightblue4\", fill = \"pink\", alpha = 0.5) +\n  labs (x = \"Daily avg windspeed (m/s)\")\n\nvisibility &lt;- ggplot (Bikesharenew, aes (x = Bikesharenew$`Visibility (10m)_Daily`)) +\n  geom_histogram(color = \"lightblue\", fill = \"white\", alpha = 0.5) +\n  labs (x = \"Daily avg Visibility (10m)\")\n\ndewpoint &lt;- ggplot (Bikesharenew, aes (x = Bikesharenew$`Dew point temperature(C)_Daily`)) +\n  geom_histogram(color = \"green\", fill = \"ivory\", alpha = 0.5) +\n  labs (x = \"Daily avg dew point temp (oC)\")\n\nsolar &lt;- ggplot (Bikesharenew, aes (x = Bikesharenew$`Solar Radiation (MJ/m2)_Daily`)) +\n  geom_histogram(color = \"red\", fill = \"orange2\", alpha = 0.5) +\n  labs (x = \"Daily avg solar radiation (MJ/m2)\")\n\ngrid.arrange(rentalcount,rainfall,snowfall,Temperature,Humidity,windspeed,visibility,dewpoint,solar, ncol = 3)\n\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\nWarning: Use of `` Bikesharenew$`Snowfall (cm)_Daily` `` is discouraged.\nℹ Use `Snowfall (cm)_Daily` instead.\n\n\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\nWarning: Use of `` Bikesharenew$`Temperature(C)_Daily` `` is discouraged.\nℹ Use `Temperature(C)_Daily` instead.\n\n\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\nWarning: Use of `` Bikesharenew$`Humidity(%)_Daily` `` is discouraged.\nℹ Use `Humidity(%)_Daily` instead.\n\n\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\nWarning: Use of `` Bikesharenew$`Wind speed (m/s)_Daily` `` is discouraged.\nℹ Use `Wind speed (m/s)_Daily` instead.\n\n\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\nWarning: Use of `` Bikesharenew$`Visibility (10m)_Daily` `` is discouraged.\nℹ Use `Visibility (10m)_Daily` instead.\n\n\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\nWarning: Use of `` Bikesharenew$`Dew point temperature(C)_Daily` `` is discouraged.\nℹ Use `Dew point temperature(C)_Daily` instead.\n\n\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\nWarning: Use of `` Bikesharenew$`Solar Radiation (MJ/m2)_Daily` `` is discouraged.\nℹ Use `Solar Radiation (MJ/m2)_Daily` instead.\n\n\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\n\n\n\n\n\n\n\nIt is interesting to see the rough bi-modal distribution of rented bike count. neither mean nor median fall on either peak. Probably it is just good and bad weather conditions that is driving this division.\nIn order to assist data modeling, not only we are interested in which variable contributes the most to the changes of bike rental count, but also we wanted to figure out the correlation among different predictors. Thus we would use corr plot to visualize the relationship\n\nlibrary (corrplot)\n\nWarning: package 'corrplot' was built under R version 4.3.3\n\n\ncorrplot 0.94 loaded\n\ncor_matrix &lt;- cor(Bikesharenew |&gt; select (-Date))  # Compute correlation matrix\ncorrplot(cor_matrix, method = \"circle\", type = \"upper\", tl.cex = 0.8)\n\n\n\n\n\n\n\n\nFrom this correlation plot it is easy to see the daily number of checked out bike is highly positively correlated with the daily temperature, dewpoint and solar radiation. However since both dewpoint and solar radiation are highly correlated with the temperature themselves, we will wait to see whether we should include them all. On the contrary, daily rainfall, snowfall or windspeed is negatively associated with bike count. But remember the distribution of those three variable is far from normal distribution, so maybe it would help to transform the three variables into categorical variables to better model the bike rental count.\n\n\n\nNow we could model our data Bikesharenew. First let’s split them using seasons to stratify. However we missed the categorical variables in the original data set. Let’s fix this first!\n\nBikeshare_cat &lt;- Bikeshare |&gt; select (Date, SeasonsF, HolidayF) |&gt; unique()\nstr (Bikeshare_cat)\n\ntibble [353 × 3] (S3: tbl_df/tbl/data.frame)\n $ Date    : Date[1:353], format: \"2017-12-01\" \"2017-12-02\" ...\n $ SeasonsF: Factor w/ 4 levels \"Autumn\",\"Spring\",..: 4 4 4 4 4 4 4 4 4 4 ...\n $ HolidayF: Factor w/ 2 levels \"Holiday\",\"No Holiday\": 2 2 2 2 2 2 2 2 2 2 ...\n\nBikesharenew2 &lt;- left_join(Bikesharenew, Bikeshare_cat, by = join_by(Date))\nstr (Bikesharenew2)\n\ntibble [353 × 12] (S3: tbl_df/tbl/data.frame)\n $ Date                          : Date[1:353], format: \"2017-12-01\" \"2017-12-02\" ...\n $ Rented Bike Count_Daily       : num [1:353] 9539 8523 7222 8729 8307 ...\n $ Rainfall(mm)_Daily            : num [1:353] 0 0 4 0.1 0 1.3 0 0 0 4.1 ...\n $ Snowfall (cm)_Daily           : num [1:353] 0 0 0 0 0 8.6 10.4 0 0 32.5 ...\n $ Temperature(C)_Daily          : num [1:353] -2.454 1.325 4.875 -0.304 -4.458 ...\n $ Humidity(%)_Daily             : num [1:353] 45.9 62 81.5 52.5 36.4 ...\n $ Wind speed (m/s)_Daily        : num [1:353] 1.54 1.71 1.61 3.45 1.11 ...\n $ Visibility (10m)_Daily        : num [1:353] 1871 1471 456 1363 1959 ...\n $ Dew point temperature(C)_Daily: num [1:353] -13.55 -5.72 1.88 -9.93 -17.43 ...\n $ Solar Radiation (MJ/m2)_Daily : num [1:353] 0.2487 0.2637 0.1254 0.2829 0.0358 ...\n $ SeasonsF                      : Factor w/ 4 levels \"Autumn\",\"Spring\",..: 4 4 4 4 4 4 4 4 4 4 ...\n $ HolidayF                      : Factor w/ 2 levels \"Holiday\",\"No Holiday\": 2 2 2 2 2 2 2 2 2 2 ...\n\n\nHere we inspect the column names for the Bikesharenew2 data frame and found they could prove to be problematic. Change them now.\n\nnewnames &lt;- c (\"Rainfall_daily\", \"Snowfall_daily\",\n               \"TempC_daily\", \"Humidity_daily\",\n               \"Windspeed_daily\", \"Visibility_daily\",\n               \"DewtempC_daily\", \"solarrad_daily\")\ncolnames (Bikesharenew2) [3:10] &lt;- newnames\nstr (Bikesharenew2)\n\ntibble [353 × 12] (S3: tbl_df/tbl/data.frame)\n $ Date                   : Date[1:353], format: \"2017-12-01\" \"2017-12-02\" ...\n $ Rented Bike Count_Daily: num [1:353] 9539 8523 7222 8729 8307 ...\n $ Rainfall_daily         : num [1:353] 0 0 4 0.1 0 1.3 0 0 0 4.1 ...\n $ Snowfall_daily         : num [1:353] 0 0 0 0 0 8.6 10.4 0 0 32.5 ...\n $ TempC_daily            : num [1:353] -2.454 1.325 4.875 -0.304 -4.458 ...\n $ Humidity_daily         : num [1:353] 45.9 62 81.5 52.5 36.4 ...\n $ Windspeed_daily        : num [1:353] 1.54 1.71 1.61 3.45 1.11 ...\n $ Visibility_daily       : num [1:353] 1871 1471 456 1363 1959 ...\n $ DewtempC_daily         : num [1:353] -13.55 -5.72 1.88 -9.93 -17.43 ...\n $ solarrad_daily         : num [1:353] 0.2487 0.2637 0.1254 0.2829 0.0358 ...\n $ SeasonsF               : Factor w/ 4 levels \"Autumn\",\"Spring\",..: 4 4 4 4 4 4 4 4 4 4 ...\n $ HolidayF               : Factor w/ 2 levels \"Holiday\",\"No Holiday\": 2 2 2 2 2 2 2 2 2 2 ...\n\n\nNow it’s all good and we could proceed with splitting the data.\n\nlibrary (tidymodels)\n\nWarning: package 'tidymodels' was built under R version 4.3.3\n\n\n── Attaching packages ────────────────────────────────────── tidymodels 1.2.0 ──\n\n\n✔ broom        1.0.7     ✔ rsample      1.2.1\n✔ dials        1.3.0     ✔ tune         1.2.1\n✔ infer        1.0.7     ✔ workflows    1.1.4\n✔ modeldata    1.4.0     ✔ workflowsets 1.1.0\n✔ parsnip      1.2.1     ✔ yardstick    1.3.1\n✔ recipes      1.1.0     \n\n\nWarning: package 'broom' was built under R version 4.3.3\n\n\nWarning: package 'dials' was built under R version 4.3.3\n\n\nWarning: package 'scales' was built under R version 4.3.2\n\n\nWarning: package 'infer' was built under R version 4.3.3\n\n\nWarning: package 'modeldata' was built under R version 4.3.3\n\n\nWarning: package 'parsnip' was built under R version 4.3.3\n\n\nWarning: package 'recipes' was built under R version 4.3.3\n\n\nWarning: package 'rsample' was built under R version 4.3.3\n\n\nWarning: package 'tune' was built under R version 4.3.3\n\n\nWarning: package 'workflows' was built under R version 4.3.3\n\n\nWarning: package 'workflowsets' was built under R version 4.3.3\n\n\nWarning: package 'yardstick' was built under R version 4.3.3\n\n\n── Conflicts ───────────────────────────────────────── tidymodels_conflicts() ──\n✖ gridExtra::combine() masks dplyr::combine()\n✖ scales::discard()    masks purrr::discard()\n✖ dplyr::filter()      masks stats::filter()\n✖ recipes::fixed()     masks stringr::fixed()\n✖ dplyr::lag()         masks stats::lag()\n✖ yardstick::spec()    masks readr::spec()\n✖ recipes::step()      masks stats::step()\n• Dig deeper into tidy modeling with R at https://www.tmwr.org\n\nBikesharesplit &lt;- initial_split (Bikesharenew2, prop = 0.75, strata = SeasonsF)\n\nNow create a 10-fold CV on training set.\n\nbikesharetrain &lt;- training (Bikesharesplit)\nbikeshare_10_fold &lt;- vfold_cv(bikesharetrain,10)\n\n\n\n\nNow let’s create three different recipe, with the first recipe only considering simple linear regression model. Use the recipe () and bake () to see if it works.\n\nrecipe (`Rented Bike Count_Daily` ~., data = bikesharetrain) |&gt;\n  step_date (Date, features = \"dow\") |&gt;\n  step_mutate (Date_dow = as.character(Date_dow)) |&gt;\n  step_mutate (Days = ifelse(Date_dow %in% c(\"Sat\", \"Sun\"), \"weekend\", \"weekday\")) |&gt;\n  step_mutate (Days = factor (Days, levels = c (\"weekend\", \"weekdays\"))) |&gt;\n  step_normalize (all_numeric(),-all_outcomes()) |&gt;\n  step_unknown (Days, new_level = \"unknown days\") |&gt;\n  step_dummy (SeasonsF, HolidayF, Days) |&gt;\n  prep (training = bikesharetrain) |&gt;\n  bake (bikesharetrain)\n\n# A tibble: 263 × 17\n   Date       Rainfall_daily Snowfall_daily TempC_daily Humidity_daily\n   &lt;date&gt;              &lt;dbl&gt;          &lt;dbl&gt;       &lt;dbl&gt;          &lt;dbl&gt;\n 1 2018-09-01         -0.323         -0.214       1.06           0.184\n 2 2018-09-02         -0.323         -0.214       1.02          -0.268\n 3 2018-09-03          2.68          -0.214       0.903          1.61 \n 4 2018-09-04         -0.323         -0.214       0.873          0.890\n 5 2018-09-05         -0.323         -0.214       0.922          0.224\n 6 2018-09-06         -0.323         -0.214       0.957          0.834\n 7 2018-09-07         -0.192         -0.214       0.780         -0.110\n 8 2018-09-08         -0.323         -0.214       0.740         -0.666\n 9 2018-09-09         -0.323         -0.214       0.763         -0.612\n10 2018-09-10         -0.323         -0.214       0.847         -0.570\n# ℹ 253 more rows\n# ℹ 12 more variables: Windspeed_daily &lt;dbl&gt;, Visibility_daily &lt;dbl&gt;,\n#   DewtempC_daily &lt;dbl&gt;, solarrad_daily &lt;dbl&gt;,\n#   `Rented Bike Count_Daily` &lt;dbl&gt;, Date_dow &lt;chr&gt;, SeasonsF_Spring &lt;dbl&gt;,\n#   SeasonsF_Summer &lt;dbl&gt;, SeasonsF_Winter &lt;dbl&gt;, HolidayF_No.Holiday &lt;dbl&gt;,\n#   Days_weekdays &lt;dbl&gt;, Days_unknown.days &lt;dbl&gt;\n\n\nWell, it seemed to work. Apply this to the first recipe.\n\nbikeshare_rec_1 &lt;- recipe (`Rented Bike Count_Daily` ~., data = bikesharetrain) |&gt;\n  step_date (Date, features = \"dow\") |&gt;\n  step_mutate (Date_dow = as.character(Date_dow)) |&gt;\n  step_mutate (Days = ifelse(Date_dow %in% c(\"Sat\", \"Sun\"), \"weekend\", \"weekday\")) |&gt;\n  step_mutate (Days = factor (Days, levels = c (\"weekend\", \"weekdays\"))) |&gt;\n  step_normalize (all_numeric(),-all_outcomes()) |&gt;\n  step_unknown (Days, new_level = \"unknown days\") |&gt;\n  step_dummy (SeasonsF, HolidayF, Days)\n\nLet’s create the 2nd recipe, adding several interactions while keeping most of the recipe unchanged.\n\nrecipe (`Rented Bike Count_Daily` ~., data = bikesharetrain) |&gt;\n  step_date (Date, features = \"dow\") |&gt;\n  step_mutate (Date_dow = as.character(Date_dow)) |&gt;\n  step_mutate (Days = ifelse(Date_dow %in% c(\"Sat\", \"Sun\"), \"weekend\", \"weekday\")) |&gt;\n  step_mutate (Days = factor (Days, levels = c (\"weekend\", \"weekdays\"))) |&gt;\n  step_normalize (all_numeric(),-all_outcomes()) |&gt;\n  step_unknown (Days, new_level = \"unknown days\") |&gt;\n  step_dummy (SeasonsF, HolidayF, Days) |&gt;\n  step_interact (terms = ~ starts_with (\"Season\") * HolidayF_No.Holiday + \n                          starts_with(\"Season\") * TempC_daily +\n                  TempC_daily * Rainfall_daily) |&gt;\n  prep (training = bikesharetrain) |&gt;\n  bake (bikesharetrain)\n\n# A tibble: 263 × 24\n   Date       Rainfall_daily Snowfall_daily TempC_daily Humidity_daily\n   &lt;date&gt;              &lt;dbl&gt;          &lt;dbl&gt;       &lt;dbl&gt;          &lt;dbl&gt;\n 1 2018-09-01         -0.323         -0.214       1.06           0.184\n 2 2018-09-02         -0.323         -0.214       1.02          -0.268\n 3 2018-09-03          2.68          -0.214       0.903          1.61 \n 4 2018-09-04         -0.323         -0.214       0.873          0.890\n 5 2018-09-05         -0.323         -0.214       0.922          0.224\n 6 2018-09-06         -0.323         -0.214       0.957          0.834\n 7 2018-09-07         -0.192         -0.214       0.780         -0.110\n 8 2018-09-08         -0.323         -0.214       0.740         -0.666\n 9 2018-09-09         -0.323         -0.214       0.763         -0.612\n10 2018-09-10         -0.323         -0.214       0.847         -0.570\n# ℹ 253 more rows\n# ℹ 19 more variables: Windspeed_daily &lt;dbl&gt;, Visibility_daily &lt;dbl&gt;,\n#   DewtempC_daily &lt;dbl&gt;, solarrad_daily &lt;dbl&gt;,\n#   `Rented Bike Count_Daily` &lt;dbl&gt;, Date_dow &lt;chr&gt;, SeasonsF_Spring &lt;dbl&gt;,\n#   SeasonsF_Summer &lt;dbl&gt;, SeasonsF_Winter &lt;dbl&gt;, HolidayF_No.Holiday &lt;dbl&gt;,\n#   Days_weekdays &lt;dbl&gt;, Days_unknown.days &lt;dbl&gt;,\n#   SeasonsF_Spring_x_HolidayF_No.Holiday &lt;dbl&gt;, …\n\n\n\nbikeshare_rec_2 &lt;- recipe (`Rented Bike Count_Daily` ~., data = bikesharetrain) |&gt;\n  step_date (Date, features = \"dow\") |&gt;\n  step_mutate (Date_dow = as.character(Date_dow)) |&gt;\n  step_mutate (Days = ifelse(Date_dow %in% c(\"Sat\", \"Sun\"), \"weekend\", \"weekday\")) |&gt;\n  step_mutate (Days = factor (Days, levels = c (\"weekend\", \"weekdays\"))) |&gt;\n  step_normalize (all_numeric(),-all_outcomes()) |&gt;\n  step_unknown (Days, new_level = \"unknown\") |&gt;\n  step_dummy (SeasonsF, HolidayF, Days) |&gt;\n  step_interact (terms = ~ starts_with (\"Season\") * HolidayF_No.Holiday + \n                          starts_with(\"Season\") * TempC_daily +\n                  TempC_daily * Rainfall_daily)\n\nProceed to add the 3rd recipe\n\nbikeshare_rec_3 &lt;- recipe (`Rented Bike Count_Daily` ~., data = bikesharetrain) |&gt;\n  step_date (Date, features = \"dow\") |&gt;\n  step_mutate (Date_dow = as.character(Date_dow)) |&gt;\n  step_mutate (Days = ifelse(Date_dow %in% c(\"Sat\", \"Sun\"), \"weekend\", \"weekday\")) |&gt;\n  step_mutate (Days = factor (Days, levels = c (\"weekend\", \"weekdays\"))) |&gt;\n  step_normalize (all_numeric(),-all_outcomes()) |&gt;\n  step_unknown (Days, new_level = \"unknown\") |&gt;\n  step_dummy (SeasonsF, HolidayF, Days) |&gt;\n  step_interact (terms = ~ starts_with (\"Season\") * HolidayF_No.Holiday + \n                          starts_with(\"Season\") * TempC_daily +\n                  TempC_daily * Rainfall_daily) |&gt;\n  step_poly (Rainfall_daily, Snowfall_daily, Windspeed_daily, solarrad_daily)\n\nThere was an error saying the degree of the polynomial needs to be smaller than the unique number of a variable, but according to my observation all numeric variable has more than two unique values. This I do not understand, but I manually chose some anyway.\nNow set up our linear model to the engine “lm”\n\nbikeshare_mod &lt;- linear_reg() |&gt; set_engine (\"lm\")\nbikeshare_wfl_1 &lt;- workflow() |&gt; add_recipe (bikeshare_rec_1) |&gt; add_model (bikeshare_mod)\nbikeshare_wfl_2 &lt;- workflow() |&gt; add_recipe (bikeshare_rec_2) |&gt; add_model (bikeshare_mod)\nbikeshare_wfl_3 &lt;- workflow() |&gt; add_recipe (bikeshare_rec_3) |&gt; add_model (bikeshare_mod)\n\nNow we are using the CV data to fit the three different models.\n\nbikeshare_cv_fit_1 &lt;- bikeshare_wfl_1 |&gt; fit_resamples (bikeshare_10_fold)\n\n→ A | warning: prediction from rank-deficient fit; consider predict(., rankdeficient=\"NA\")\n\n\nThere were issues with some computations   A: x1\n\n\nThere were issues with some computations   A: x5\n\n\nThere were issues with some computations   A: x10\n\n\n\n\nbikeshare_cv_fit_2 &lt;- bikeshare_wfl_2 |&gt; fit_resamples (bikeshare_10_fold)\n\n→ A | warning: prediction from rank-deficient fit; consider predict(., rankdeficient=\"NA\")\n\n\nThere were issues with some computations   A: x5\n\n\nThere were issues with some computations   A: x10\n\n\n\n\nbikeshare_cv_fit_3 &lt;- bikeshare_wfl_3 |&gt; fit_resamples (bikeshare_10_fold)\n\n→ A | warning: prediction from rank-deficient fit; consider predict(., rankdeficient=\"NA\")\n\n\nThere were issues with some computations   A: x4\n\n\nThere were issues with some computations   A: x10\n\n\n\n\nrbind ((bikeshare_cv_fit_1 |&gt; collect_metrics()),\n(bikeshare_cv_fit_2 |&gt; collect_metrics()),\n(bikeshare_cv_fit_3 |&gt; collect_metrics()))\n\n# A tibble: 6 × 6\n  .metric .estimator     mean     n   std_err .config             \n  &lt;chr&gt;   &lt;chr&gt;         &lt;dbl&gt; &lt;int&gt;     &lt;dbl&gt; &lt;chr&gt;               \n1 rmse    standard   4136.       10 236.      Preprocessor1_Model1\n2 rsq     standard      0.824    10   0.0188  Preprocessor1_Model1\n3 rmse    standard   3244.       10 240.      Preprocessor1_Model1\n4 rsq     standard      0.892    10   0.0134  Preprocessor1_Model1\n5 rmse    standard   3063.       10 183.      Preprocessor1_Model1\n6 rsq     standard      0.905    10   0.00994 Preprocessor1_Model1\n\n\nWell, our data showed adding some interaction terms and polynomial terms indeed improved the model, as the mean RMSE reduced, but the value of RSQ did not reduce, meaning adding a lot of interaction term did not improve too much of our model. Now fit the third model into our entire training set.\n\nMLR_final &lt;- bikeshare_wfl_3 |&gt; fit (bikesharetrain)\ntidy (MLR_final)\n\n# A tibble: 33 × 5\n   term             estimate std.error statistic     p.value\n   &lt;chr&gt;               &lt;dbl&gt;     &lt;dbl&gt;     &lt;dbl&gt;       &lt;dbl&gt;\n 1 (Intercept)      590688.  167427.       3.53  0.000504   \n 2 Date                -32.1      9.40    -3.42  0.000750   \n 3 TempC_daily       -2730.    3529.      -0.774 0.440      \n 4 Humidity_daily    -2455.    1312.      -1.87  0.0626     \n 5 Visibility_daily    129.     270.       0.477 0.634      \n 6 DewtempC_daily     7488.    4000.       1.87  0.0624     \n 7 Date_dowMon       -1839.     659.      -2.79  0.00570    \n 8 Date_dowSat       -2541.     655.      -3.88  0.000135   \n 9 Date_dowSun       -3481.     656.      -5.31  0.000000257\n10 Date_dowThu        -362.     627.      -0.577 0.565      \n# ℹ 23 more rows\n\n\nJudging from the p-value, the most significant beta is from the interaction between Season_Summer and TempC_daily, suggesting in summer days, increased temperature is likely to reduce the number of rented bike (Take note all numeric value were standardized here). Sundays are definitely unpopular days since being Sunday is predicted to reduce the number of rented bike by 3601 per day. As we may predict, summer days are much more popular than winter days to ride a bike, and rainfall is sure downpour people’s enthusiasm to ride a bike as well."
  },
  {
    "objectID": "HW8.html#data-introduction",
    "href": "HW8.html#data-introduction",
    "title": "ST558_2024_HW8_bike data",
    "section": "",
    "text": "Today we are using a bike share data for the basic modeling practise. The introoduction of this data set is accessed through this website: (Seoul Bike Sharing Demand - UCI Machine Learning Repository). To our relieve there is no missing values.\nThe aim of the project is to predict the rental bike count at each hour of a day based on the weather condition, season, holiday and the hour. Since bike usage is sensitive to weather condition it is presumable that certain weather condition, plus the day condition (weekday/weekend, holiday, etc.) is likely to dictate the bike usage in a particular time of the day.\nLet’s load some packages and read in the data first:\n\nlibrary (tidyverse)\n\nWarning: package 'ggplot2' was built under R version 4.3.3\n\n\nWarning: package 'tidyr' was built under R version 4.3.3\n\n\nWarning: package 'readr' was built under R version 4.3.3\n\n\nWarning: package 'dplyr' was built under R version 4.3.3\n\n\nWarning: package 'stringr' was built under R version 4.3.3\n\n\nWarning: package 'lubridate' was built under R version 4.3.3\n\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nlibrary (dplyr)\nBikeshare &lt;- read_csv (\"data//SeoulBikeData.csv\")\n\nRows: 8760 Columns: 14\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (4): Date, Seasons, Holiday, Functioning Day\ndbl (10): Rented Bike Count, Hour, Temperature(C), Humidity(%), Wind speed (...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\nBikeshare\n\n# A tibble: 8,760 × 14\n   Date      `Rented Bike Count`  Hour `Temperature(C)` `Humidity(%)`\n   &lt;chr&gt;                   &lt;dbl&gt; &lt;dbl&gt;            &lt;dbl&gt;         &lt;dbl&gt;\n 1 1/12/2017                 254     0             -5.2            37\n 2 1/12/2017                 204     1             -5.5            38\n 3 1/12/2017                 173     2             -6              39\n 4 1/12/2017                 107     3             -6.2            40\n 5 1/12/2017                  78     4             -6              36\n 6 1/12/2017                 100     5             -6.4            37\n 7 1/12/2017                 181     6             -6.6            35\n 8 1/12/2017                 460     7             -7.4            38\n 9 1/12/2017                 930     8             -7.6            37\n10 1/12/2017                 490     9             -6.5            27\n# ℹ 8,750 more rows\n# ℹ 9 more variables: `Wind speed (m/s)` &lt;dbl&gt;, `Visibility (10m)` &lt;dbl&gt;,\n#   `Dew point temperature(C)` &lt;dbl&gt;, `Solar Radiation (MJ/m2)` &lt;dbl&gt;,\n#   `Rainfall(mm)` &lt;dbl&gt;, `Snowfall (cm)` &lt;dbl&gt;, Seasons &lt;chr&gt;, Holiday &lt;chr&gt;,\n#   `Functioning Day` &lt;chr&gt;\n\n\nUnexpectedly the first trial to read in data failed. It turned out the file contains some special character that the R does not understand/not encoded by the R-recognizable way."
  },
  {
    "objectID": "HW8.html#data-cleaning",
    "href": "HW8.html#data-cleaning",
    "title": "ST558_2024_HW8_bike data",
    "section": "",
    "text": "After changing the format manually everything is fine. We first transform the date to the date format\n\nBikeshare$Date &lt;- as.Date (Bikeshare$Date, format = \"%d/%m/%Y\")\n\nNow the date are in the right form and can do some visualization around the time data, which we will work on that later. Missing values are creating a headache for exploratory data analysis, so we want to check for missingness, evaluate and take measures to eliminate the missing values.\n\ncolSums(is.na(Bikeshare))\n\n                    Date        Rented Bike Count                     Hour \n                       0                        0                        0 \n          Temperature(C)              Humidity(%)         Wind speed (m/s) \n                       0                        0                        0 \n        Visibility (10m) Dew point temperature(C)  Solar Radiation (MJ/m2) \n                       0                        0                        0 \n            Rainfall(mm)            Snowfall (cm)                  Seasons \n                       0                        0                        0 \n                 Holiday          Functioning Day \n                       0                        0 \n\nlength(unique(Bikeshare$Seasons))\n\n[1] 4\n\n\nLuckily for us, there is no missing data in the data set. To check for the number of unique values in each character column, use the command table(), and if everything is right turn the character variables into factors.\n\ntable(Bikeshare$Seasons)\n\n\nAutumn Spring Summer Winter \n  2184   2208   2208   2160 \n\ntable (Bikeshare$Holiday)\n\n\n   Holiday No Holiday \n       432       8328 \n\ntable (Bikeshare$`Functioning Day`)\n\n\n  No  Yes \n 295 8465 \n\nBikeshare &lt;- Bikeshare |&gt; mutate (SeasonsF = as.factor (Seasons),\n                                  HolidayF = as.factor (Holiday)) |&gt;\n  filter (`Functioning Day` == \"Yes\") |&gt;\n  select (-Seasons, -Holiday, -`Functioning Day`)\n\nWe filtered the data so that all days recorded were “functional day” and factorized variables “Seasons” and “Holiday”. Since we wanted to summarize across the hours to simplify the data (thus eliminating the need to adjust for the hour variable), we will hereby factorize date as well.\n\nBikeshare &lt;- Bikeshare |&gt; mutate (DateF = as.factor (Date))\n\nNow we are ready to do some EDA."
  },
  {
    "objectID": "HW8.html#exploratory-data-analysis",
    "href": "HW8.html#exploratory-data-analysis",
    "title": "ST558_2024_HW8_bike data",
    "section": "",
    "text": "Let’s first do summary over some variables. We already counted the number of each unique factors of the categorical variables, we could summarize them as below. First let’s take a look at the variables of the modified data set\n\nstr (Bikeshare)\n\ntibble [8,465 × 14] (S3: tbl_df/tbl/data.frame)\n $ Date                    : Date[1:8465], format: \"2017-12-01\" \"2017-12-01\" ...\n $ Rented Bike Count       : num [1:8465] 254 204 173 107 78 100 181 460 930 490 ...\n $ Hour                    : num [1:8465] 0 1 2 3 4 5 6 7 8 9 ...\n $ Temperature(C)          : num [1:8465] -5.2 -5.5 -6 -6.2 -6 -6.4 -6.6 -7.4 -7.6 -6.5 ...\n $ Humidity(%)             : num [1:8465] 37 38 39 40 36 37 35 38 37 27 ...\n $ Wind speed (m/s)        : num [1:8465] 2.2 0.8 1 0.9 2.3 1.5 1.3 0.9 1.1 0.5 ...\n $ Visibility (10m)        : num [1:8465] 2000 2000 2000 2000 2000 ...\n $ Dew point temperature(C): num [1:8465] -17.6 -17.6 -17.7 -17.6 -18.6 -18.7 -19.5 -19.3 -19.8 -22.4 ...\n $ Solar Radiation (MJ/m2) : num [1:8465] 0 0 0 0 0 0 0 0 0.01 0.23 ...\n $ Rainfall(mm)            : num [1:8465] 0 0 0 0 0 0 0 0 0 0 ...\n $ Snowfall (cm)           : num [1:8465] 0 0 0 0 0 0 0 0 0 0 ...\n $ SeasonsF                : Factor w/ 4 levels \"Autumn\",\"Spring\",..: 4 4 4 4 4 4 4 4 4 4 ...\n $ HolidayF                : Factor w/ 2 levels \"Holiday\",\"No Holiday\": 2 2 2 2 2 2 2 2 2 2 ...\n $ DateF                   : Factor w/ 353 levels \"2017-12-01\",\"2017-12-02\",..: 1 1 1 1 1 1 1 1 1 1 ...\n\n\nFor the variable “Rented Bike Count”, “Rainfall (mm)”, “Snowfall (cm)”, we would like to get summary data based on the summed value in a day (added up all the hour data). For other weather-related data, we would like to get a summary of the mean across all the hours in a day.\n\nrentalcount_precipitation_summary &lt;-Bikeshare |&gt; group_by(Date) |&gt;\n  summarize (across(c(`Rented Bike Count`,`Rainfall(mm)`,`Snowfall (cm)`),\n             .fns = list (\"Daily\" = sum)))\nsummary(rentalcount_precipitation_summary)\n\n      Date            Rented Bike Count_Daily Rainfall(mm)_Daily\n Min.   :2017-12-01   Min.   :  977           Min.   : 0.000    \n 1st Qu.:2018-02-27   1st Qu.: 6967           1st Qu.: 0.000    \n Median :2018-05-28   Median :18563           Median : 0.000    \n Mean   :2018-05-28   Mean   :17485           Mean   : 3.576    \n 3rd Qu.:2018-08-24   3rd Qu.:26285           3rd Qu.: 0.500    \n Max.   :2018-11-30   Max.   :36149           Max.   :95.500    \n Snowfall (cm)_Daily\n Min.   : 0.000     \n 1st Qu.: 0.000     \n Median : 0.000     \n Mean   : 1.863     \n 3rd Qu.: 0.000     \n Max.   :78.700     \n\nweather_summary &lt;- Bikeshare |&gt; group_by(Date) |&gt;\n  summarize (across (c(`Temperature(C)`, `Humidity(%)`,`Wind speed (m/s)`,`Visibility (10m)`,`Dew point temperature(C)`,`Solar Radiation (MJ/m2)`),\n                     .fns = list (\"Daily\" = mean)))\nsummary (weather_summary)\n\n      Date            Temperature(C)_Daily Humidity(%)_Daily\n Min.   :2017-12-01   Min.   :-14.738      Min.   :22.25    \n 1st Qu.:2018-02-27   1st Qu.:  3.304      1st Qu.:47.58    \n Median :2018-05-28   Median : 13.738      Median :57.17    \n Mean   :2018-05-28   Mean   : 12.776      Mean   :58.17    \n 3rd Qu.:2018-08-24   3rd Qu.: 22.592      3rd Qu.:67.71    \n Max.   :2018-11-30   Max.   : 33.742      Max.   :95.88    \n Wind speed (m/s)_Daily Visibility (10m)_Daily Dew point temperature(C)_Daily\n Min.   :0.6625         Min.   : 214.3         Min.   :-27.750               \n 1st Qu.:1.3042         1st Qu.:1087.0         1st Qu.: -5.188               \n Median :1.6583         Median :1557.8         Median :  4.612               \n Mean   :1.7261         Mean   :1434.0         Mean   :  3.954               \n 3rd Qu.:1.9542         3rd Qu.:1874.3         3rd Qu.: 14.921               \n Max.   :4.0000         Max.   :2000.0         Max.   : 25.038               \n Solar Radiation (MJ/m2)_Daily\n Min.   :0.02917              \n 1st Qu.:0.28333              \n Median :0.56500              \n Mean   :0.56773              \n 3rd Qu.:0.82000              \n Max.   :1.21667              \n\n\nWe could combine the two data set into one.\n\nBikesharenew &lt;- left_join(rentalcount_precipitation_summary,\n                          weather_summary)\n\nJoining with `by = join_by(Date)`\n\nstr(Bikesharenew)\n\ntibble [353 × 10] (S3: tbl_df/tbl/data.frame)\n $ Date                          : Date[1:353], format: \"2017-12-01\" \"2017-12-02\" ...\n $ Rented Bike Count_Daily       : num [1:353] 9539 8523 7222 8729 8307 ...\n $ Rainfall(mm)_Daily            : num [1:353] 0 0 4 0.1 0 1.3 0 0 0 4.1 ...\n $ Snowfall (cm)_Daily           : num [1:353] 0 0 0 0 0 8.6 10.4 0 0 32.5 ...\n $ Temperature(C)_Daily          : num [1:353] -2.454 1.325 4.875 -0.304 -4.458 ...\n $ Humidity(%)_Daily             : num [1:353] 45.9 62 81.5 52.5 36.4 ...\n $ Wind speed (m/s)_Daily        : num [1:353] 1.54 1.71 1.61 3.45 1.11 ...\n $ Visibility (10m)_Daily        : num [1:353] 1871 1471 456 1363 1959 ...\n $ Dew point temperature(C)_Daily: num [1:353] -13.55 -5.72 1.88 -9.93 -17.43 ...\n $ Solar Radiation (MJ/m2)_Daily : num [1:353] 0.2487 0.2637 0.1254 0.2829 0.0358 ...\n\n\nBased on the merged data set, we will do more work – To better visualize the distribution of variables, histogram seemed to be the choice.\n\nlibrary (gridExtra)\n\n\nAttaching package: 'gridExtra'\n\n\nThe following object is masked from 'package:dplyr':\n\n    combine\n\nrentalcount &lt;- ggplot (Bikesharenew, aes (x = `Rented Bike Count_Daily`)) +\n  geom_histogram(color = \"black\", fill = \"red3\", alpha = 0.5) +\n  labs (x = \"Daily rented Bike Count\")\n\nrainfall &lt;- ggplot (Bikesharenew, aes (x = `Rainfall(mm)_Daily`)) +\n  geom_histogram(color = \"black\", fill = \"lightgreen\", alpha = 0.5) +\n  labs (x = \"Daily rainfall (mm)\")\n\nsnowfall &lt;- ggplot (Bikesharenew, aes (x = Bikesharenew$`Snowfall (cm)_Daily`)) +\n  geom_histogram(color = \"brown\", fill = \"white\", alpha = 0.5) +\n  labs (x = \"Daily snowfall (cm)\")\n\nTemperature &lt;- ggplot (Bikesharenew, aes (x = Bikesharenew$`Temperature(C)_Daily`)) +\n  geom_histogram(color = \"black\", fill = \"orange\", alpha = 0.5) +\n  labs (x = \"Daily avg Temp (oC)\")\n\nHumidity &lt;- ggplot (Bikesharenew, aes (x = Bikesharenew$`Humidity(%)_Daily`)) +\n  geom_histogram(color = \"black\", fill = \"lightblue\", alpha = 0.5) +\n  labs (x = \"Daily avg Humidity (%)\")\n\nwindspeed &lt;- ggplot (Bikesharenew, aes (x = Bikesharenew$`Wind speed (m/s)_Daily`)) +\n  geom_histogram(color = \"lightblue4\", fill = \"pink\", alpha = 0.5) +\n  labs (x = \"Daily avg windspeed (m/s)\")\n\nvisibility &lt;- ggplot (Bikesharenew, aes (x = Bikesharenew$`Visibility (10m)_Daily`)) +\n  geom_histogram(color = \"lightblue\", fill = \"white\", alpha = 0.5) +\n  labs (x = \"Daily avg Visibility (10m)\")\n\ndewpoint &lt;- ggplot (Bikesharenew, aes (x = Bikesharenew$`Dew point temperature(C)_Daily`)) +\n  geom_histogram(color = \"green\", fill = \"ivory\", alpha = 0.5) +\n  labs (x = \"Daily avg dew point temp (oC)\")\n\nsolar &lt;- ggplot (Bikesharenew, aes (x = Bikesharenew$`Solar Radiation (MJ/m2)_Daily`)) +\n  geom_histogram(color = \"red\", fill = \"orange2\", alpha = 0.5) +\n  labs (x = \"Daily avg solar radiation (MJ/m2)\")\n\ngrid.arrange(rentalcount,rainfall,snowfall,Temperature,Humidity,windspeed,visibility,dewpoint,solar, ncol = 3)\n\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\nWarning: Use of `` Bikesharenew$`Snowfall (cm)_Daily` `` is discouraged.\nℹ Use `Snowfall (cm)_Daily` instead.\n\n\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\nWarning: Use of `` Bikesharenew$`Temperature(C)_Daily` `` is discouraged.\nℹ Use `Temperature(C)_Daily` instead.\n\n\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\nWarning: Use of `` Bikesharenew$`Humidity(%)_Daily` `` is discouraged.\nℹ Use `Humidity(%)_Daily` instead.\n\n\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\nWarning: Use of `` Bikesharenew$`Wind speed (m/s)_Daily` `` is discouraged.\nℹ Use `Wind speed (m/s)_Daily` instead.\n\n\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\nWarning: Use of `` Bikesharenew$`Visibility (10m)_Daily` `` is discouraged.\nℹ Use `Visibility (10m)_Daily` instead.\n\n\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\nWarning: Use of `` Bikesharenew$`Dew point temperature(C)_Daily` `` is discouraged.\nℹ Use `Dew point temperature(C)_Daily` instead.\n\n\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\nWarning: Use of `` Bikesharenew$`Solar Radiation (MJ/m2)_Daily` `` is discouraged.\nℹ Use `Solar Radiation (MJ/m2)_Daily` instead.\n\n\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\n\n\n\n\n\n\n\nIt is interesting to see the rough bi-modal distribution of rented bike count. neither mean nor median fall on either peak. Probably it is just good and bad weather conditions that is driving this division.\nIn order to assist data modeling, not only we are interested in which variable contributes the most to the changes of bike rental count, but also we wanted to figure out the correlation among different predictors. Thus we would use corr plot to visualize the relationship\n\nlibrary (corrplot)\n\nWarning: package 'corrplot' was built under R version 4.3.3\n\n\ncorrplot 0.94 loaded\n\ncor_matrix &lt;- cor(Bikesharenew |&gt; select (-Date))  # Compute correlation matrix\ncorrplot(cor_matrix, method = \"circle\", type = \"upper\", tl.cex = 0.8)\n\n\n\n\n\n\n\n\nFrom this correlation plot it is easy to see the daily number of checked out bike is highly positively correlated with the daily temperature, dewpoint and solar radiation. However since both dewpoint and solar radiation are highly correlated with the temperature themselves, we will wait to see whether we should include them all. On the contrary, daily rainfall, snowfall or windspeed is negatively associated with bike count. But remember the distribution of those three variable is far from normal distribution, so maybe it would help to transform the three variables into categorical variables to better model the bike rental count."
  },
  {
    "objectID": "HW8.html#split-the-data",
    "href": "HW8.html#split-the-data",
    "title": "ST558_2024_HW8_bike data",
    "section": "",
    "text": "Now we could model our data Bikesharenew. First let’s split them using seasons to stratify. However we missed the categorical variables in the original data set. Let’s fix this first!\n\nBikeshare_cat &lt;- Bikeshare |&gt; select (Date, SeasonsF, HolidayF) |&gt; unique()\nstr (Bikeshare_cat)\n\ntibble [353 × 3] (S3: tbl_df/tbl/data.frame)\n $ Date    : Date[1:353], format: \"2017-12-01\" \"2017-12-02\" ...\n $ SeasonsF: Factor w/ 4 levels \"Autumn\",\"Spring\",..: 4 4 4 4 4 4 4 4 4 4 ...\n $ HolidayF: Factor w/ 2 levels \"Holiday\",\"No Holiday\": 2 2 2 2 2 2 2 2 2 2 ...\n\nBikesharenew2 &lt;- left_join(Bikesharenew, Bikeshare_cat, by = join_by(Date))\nstr (Bikesharenew2)\n\ntibble [353 × 12] (S3: tbl_df/tbl/data.frame)\n $ Date                          : Date[1:353], format: \"2017-12-01\" \"2017-12-02\" ...\n $ Rented Bike Count_Daily       : num [1:353] 9539 8523 7222 8729 8307 ...\n $ Rainfall(mm)_Daily            : num [1:353] 0 0 4 0.1 0 1.3 0 0 0 4.1 ...\n $ Snowfall (cm)_Daily           : num [1:353] 0 0 0 0 0 8.6 10.4 0 0 32.5 ...\n $ Temperature(C)_Daily          : num [1:353] -2.454 1.325 4.875 -0.304 -4.458 ...\n $ Humidity(%)_Daily             : num [1:353] 45.9 62 81.5 52.5 36.4 ...\n $ Wind speed (m/s)_Daily        : num [1:353] 1.54 1.71 1.61 3.45 1.11 ...\n $ Visibility (10m)_Daily        : num [1:353] 1871 1471 456 1363 1959 ...\n $ Dew point temperature(C)_Daily: num [1:353] -13.55 -5.72 1.88 -9.93 -17.43 ...\n $ Solar Radiation (MJ/m2)_Daily : num [1:353] 0.2487 0.2637 0.1254 0.2829 0.0358 ...\n $ SeasonsF                      : Factor w/ 4 levels \"Autumn\",\"Spring\",..: 4 4 4 4 4 4 4 4 4 4 ...\n $ HolidayF                      : Factor w/ 2 levels \"Holiday\",\"No Holiday\": 2 2 2 2 2 2 2 2 2 2 ...\n\n\nHere we inspect the column names for the Bikesharenew2 data frame and found they could prove to be problematic. Change them now.\n\nnewnames &lt;- c (\"Rainfall_daily\", \"Snowfall_daily\",\n               \"TempC_daily\", \"Humidity_daily\",\n               \"Windspeed_daily\", \"Visibility_daily\",\n               \"DewtempC_daily\", \"solarrad_daily\")\ncolnames (Bikesharenew2) [3:10] &lt;- newnames\nstr (Bikesharenew2)\n\ntibble [353 × 12] (S3: tbl_df/tbl/data.frame)\n $ Date                   : Date[1:353], format: \"2017-12-01\" \"2017-12-02\" ...\n $ Rented Bike Count_Daily: num [1:353] 9539 8523 7222 8729 8307 ...\n $ Rainfall_daily         : num [1:353] 0 0 4 0.1 0 1.3 0 0 0 4.1 ...\n $ Snowfall_daily         : num [1:353] 0 0 0 0 0 8.6 10.4 0 0 32.5 ...\n $ TempC_daily            : num [1:353] -2.454 1.325 4.875 -0.304 -4.458 ...\n $ Humidity_daily         : num [1:353] 45.9 62 81.5 52.5 36.4 ...\n $ Windspeed_daily        : num [1:353] 1.54 1.71 1.61 3.45 1.11 ...\n $ Visibility_daily       : num [1:353] 1871 1471 456 1363 1959 ...\n $ DewtempC_daily         : num [1:353] -13.55 -5.72 1.88 -9.93 -17.43 ...\n $ solarrad_daily         : num [1:353] 0.2487 0.2637 0.1254 0.2829 0.0358 ...\n $ SeasonsF               : Factor w/ 4 levels \"Autumn\",\"Spring\",..: 4 4 4 4 4 4 4 4 4 4 ...\n $ HolidayF               : Factor w/ 2 levels \"Holiday\",\"No Holiday\": 2 2 2 2 2 2 2 2 2 2 ...\n\n\nNow it’s all good and we could proceed with splitting the data.\n\nlibrary (tidymodels)\n\nWarning: package 'tidymodels' was built under R version 4.3.3\n\n\n── Attaching packages ────────────────────────────────────── tidymodels 1.2.0 ──\n\n\n✔ broom        1.0.7     ✔ rsample      1.2.1\n✔ dials        1.3.0     ✔ tune         1.2.1\n✔ infer        1.0.7     ✔ workflows    1.1.4\n✔ modeldata    1.4.0     ✔ workflowsets 1.1.0\n✔ parsnip      1.2.1     ✔ yardstick    1.3.1\n✔ recipes      1.1.0     \n\n\nWarning: package 'broom' was built under R version 4.3.3\n\n\nWarning: package 'dials' was built under R version 4.3.3\n\n\nWarning: package 'scales' was built under R version 4.3.2\n\n\nWarning: package 'infer' was built under R version 4.3.3\n\n\nWarning: package 'modeldata' was built under R version 4.3.3\n\n\nWarning: package 'parsnip' was built under R version 4.3.3\n\n\nWarning: package 'recipes' was built under R version 4.3.3\n\n\nWarning: package 'rsample' was built under R version 4.3.3\n\n\nWarning: package 'tune' was built under R version 4.3.3\n\n\nWarning: package 'workflows' was built under R version 4.3.3\n\n\nWarning: package 'workflowsets' was built under R version 4.3.3\n\n\nWarning: package 'yardstick' was built under R version 4.3.3\n\n\n── Conflicts ───────────────────────────────────────── tidymodels_conflicts() ──\n✖ gridExtra::combine() masks dplyr::combine()\n✖ scales::discard()    masks purrr::discard()\n✖ dplyr::filter()      masks stats::filter()\n✖ recipes::fixed()     masks stringr::fixed()\n✖ dplyr::lag()         masks stats::lag()\n✖ yardstick::spec()    masks readr::spec()\n✖ recipes::step()      masks stats::step()\n• Dig deeper into tidy modeling with R at https://www.tmwr.org\n\nBikesharesplit &lt;- initial_split (Bikesharenew2, prop = 0.75, strata = SeasonsF)\n\nNow create a 10-fold CV on training set.\n\nbikesharetrain &lt;- training (Bikesharesplit)\nbikeshare_10_fold &lt;- vfold_cv(bikesharetrain,10)"
  },
  {
    "objectID": "HW8.html#mlr-model-fitting",
    "href": "HW8.html#mlr-model-fitting",
    "title": "ST558_2024_HW8_bike data",
    "section": "",
    "text": "Now let’s create three different recipe, with the first recipe only considering simple linear regression model. Use the recipe () and bake () to see if it works.\n\nrecipe (`Rented Bike Count_Daily` ~., data = bikesharetrain) |&gt;\n  step_date (Date, features = \"dow\") |&gt;\n  step_mutate (Date_dow = as.character(Date_dow)) |&gt;\n  step_mutate (Days = ifelse(Date_dow %in% c(\"Sat\", \"Sun\"), \"weekend\", \"weekday\")) |&gt;\n  step_mutate (Days = factor (Days, levels = c (\"weekend\", \"weekdays\"))) |&gt;\n  step_normalize (all_numeric(),-all_outcomes()) |&gt;\n  step_unknown (Days, new_level = \"unknown days\") |&gt;\n  step_dummy (SeasonsF, HolidayF, Days) |&gt;\n  prep (training = bikesharetrain) |&gt;\n  bake (bikesharetrain)\n\n# A tibble: 263 × 17\n   Date       Rainfall_daily Snowfall_daily TempC_daily Humidity_daily\n   &lt;date&gt;              &lt;dbl&gt;          &lt;dbl&gt;       &lt;dbl&gt;          &lt;dbl&gt;\n 1 2018-09-01         -0.323         -0.214       1.06           0.184\n 2 2018-09-02         -0.323         -0.214       1.02          -0.268\n 3 2018-09-03          2.68          -0.214       0.903          1.61 \n 4 2018-09-04         -0.323         -0.214       0.873          0.890\n 5 2018-09-05         -0.323         -0.214       0.922          0.224\n 6 2018-09-06         -0.323         -0.214       0.957          0.834\n 7 2018-09-07         -0.192         -0.214       0.780         -0.110\n 8 2018-09-08         -0.323         -0.214       0.740         -0.666\n 9 2018-09-09         -0.323         -0.214       0.763         -0.612\n10 2018-09-10         -0.323         -0.214       0.847         -0.570\n# ℹ 253 more rows\n# ℹ 12 more variables: Windspeed_daily &lt;dbl&gt;, Visibility_daily &lt;dbl&gt;,\n#   DewtempC_daily &lt;dbl&gt;, solarrad_daily &lt;dbl&gt;,\n#   `Rented Bike Count_Daily` &lt;dbl&gt;, Date_dow &lt;chr&gt;, SeasonsF_Spring &lt;dbl&gt;,\n#   SeasonsF_Summer &lt;dbl&gt;, SeasonsF_Winter &lt;dbl&gt;, HolidayF_No.Holiday &lt;dbl&gt;,\n#   Days_weekdays &lt;dbl&gt;, Days_unknown.days &lt;dbl&gt;\n\n\nWell, it seemed to work. Apply this to the first recipe.\n\nbikeshare_rec_1 &lt;- recipe (`Rented Bike Count_Daily` ~., data = bikesharetrain) |&gt;\n  step_date (Date, features = \"dow\") |&gt;\n  step_mutate (Date_dow = as.character(Date_dow)) |&gt;\n  step_mutate (Days = ifelse(Date_dow %in% c(\"Sat\", \"Sun\"), \"weekend\", \"weekday\")) |&gt;\n  step_mutate (Days = factor (Days, levels = c (\"weekend\", \"weekdays\"))) |&gt;\n  step_normalize (all_numeric(),-all_outcomes()) |&gt;\n  step_unknown (Days, new_level = \"unknown days\") |&gt;\n  step_dummy (SeasonsF, HolidayF, Days)\n\nLet’s create the 2nd recipe, adding several interactions while keeping most of the recipe unchanged.\n\nrecipe (`Rented Bike Count_Daily` ~., data = bikesharetrain) |&gt;\n  step_date (Date, features = \"dow\") |&gt;\n  step_mutate (Date_dow = as.character(Date_dow)) |&gt;\n  step_mutate (Days = ifelse(Date_dow %in% c(\"Sat\", \"Sun\"), \"weekend\", \"weekday\")) |&gt;\n  step_mutate (Days = factor (Days, levels = c (\"weekend\", \"weekdays\"))) |&gt;\n  step_normalize (all_numeric(),-all_outcomes()) |&gt;\n  step_unknown (Days, new_level = \"unknown days\") |&gt;\n  step_dummy (SeasonsF, HolidayF, Days) |&gt;\n  step_interact (terms = ~ starts_with (\"Season\") * HolidayF_No.Holiday + \n                          starts_with(\"Season\") * TempC_daily +\n                  TempC_daily * Rainfall_daily) |&gt;\n  prep (training = bikesharetrain) |&gt;\n  bake (bikesharetrain)\n\n# A tibble: 263 × 24\n   Date       Rainfall_daily Snowfall_daily TempC_daily Humidity_daily\n   &lt;date&gt;              &lt;dbl&gt;          &lt;dbl&gt;       &lt;dbl&gt;          &lt;dbl&gt;\n 1 2018-09-01         -0.323         -0.214       1.06           0.184\n 2 2018-09-02         -0.323         -0.214       1.02          -0.268\n 3 2018-09-03          2.68          -0.214       0.903          1.61 \n 4 2018-09-04         -0.323         -0.214       0.873          0.890\n 5 2018-09-05         -0.323         -0.214       0.922          0.224\n 6 2018-09-06         -0.323         -0.214       0.957          0.834\n 7 2018-09-07         -0.192         -0.214       0.780         -0.110\n 8 2018-09-08         -0.323         -0.214       0.740         -0.666\n 9 2018-09-09         -0.323         -0.214       0.763         -0.612\n10 2018-09-10         -0.323         -0.214       0.847         -0.570\n# ℹ 253 more rows\n# ℹ 19 more variables: Windspeed_daily &lt;dbl&gt;, Visibility_daily &lt;dbl&gt;,\n#   DewtempC_daily &lt;dbl&gt;, solarrad_daily &lt;dbl&gt;,\n#   `Rented Bike Count_Daily` &lt;dbl&gt;, Date_dow &lt;chr&gt;, SeasonsF_Spring &lt;dbl&gt;,\n#   SeasonsF_Summer &lt;dbl&gt;, SeasonsF_Winter &lt;dbl&gt;, HolidayF_No.Holiday &lt;dbl&gt;,\n#   Days_weekdays &lt;dbl&gt;, Days_unknown.days &lt;dbl&gt;,\n#   SeasonsF_Spring_x_HolidayF_No.Holiday &lt;dbl&gt;, …\n\n\n\nbikeshare_rec_2 &lt;- recipe (`Rented Bike Count_Daily` ~., data = bikesharetrain) |&gt;\n  step_date (Date, features = \"dow\") |&gt;\n  step_mutate (Date_dow = as.character(Date_dow)) |&gt;\n  step_mutate (Days = ifelse(Date_dow %in% c(\"Sat\", \"Sun\"), \"weekend\", \"weekday\")) |&gt;\n  step_mutate (Days = factor (Days, levels = c (\"weekend\", \"weekdays\"))) |&gt;\n  step_normalize (all_numeric(),-all_outcomes()) |&gt;\n  step_unknown (Days, new_level = \"unknown\") |&gt;\n  step_dummy (SeasonsF, HolidayF, Days) |&gt;\n  step_interact (terms = ~ starts_with (\"Season\") * HolidayF_No.Holiday + \n                          starts_with(\"Season\") * TempC_daily +\n                  TempC_daily * Rainfall_daily)\n\nProceed to add the 3rd recipe\n\nbikeshare_rec_3 &lt;- recipe (`Rented Bike Count_Daily` ~., data = bikesharetrain) |&gt;\n  step_date (Date, features = \"dow\") |&gt;\n  step_mutate (Date_dow = as.character(Date_dow)) |&gt;\n  step_mutate (Days = ifelse(Date_dow %in% c(\"Sat\", \"Sun\"), \"weekend\", \"weekday\")) |&gt;\n  step_mutate (Days = factor (Days, levels = c (\"weekend\", \"weekdays\"))) |&gt;\n  step_normalize (all_numeric(),-all_outcomes()) |&gt;\n  step_unknown (Days, new_level = \"unknown\") |&gt;\n  step_dummy (SeasonsF, HolidayF, Days) |&gt;\n  step_interact (terms = ~ starts_with (\"Season\") * HolidayF_No.Holiday + \n                          starts_with(\"Season\") * TempC_daily +\n                  TempC_daily * Rainfall_daily) |&gt;\n  step_poly (Rainfall_daily, Snowfall_daily, Windspeed_daily, solarrad_daily)\n\nThere was an error saying the degree of the polynomial needs to be smaller than the unique number of a variable, but according to my observation all numeric variable has more than two unique values. This I do not understand, but I manually chose some anyway.\nNow set up our linear model to the engine “lm”\n\nbikeshare_mod &lt;- linear_reg() |&gt; set_engine (\"lm\")\nbikeshare_wfl_1 &lt;- workflow() |&gt; add_recipe (bikeshare_rec_1) |&gt; add_model (bikeshare_mod)\nbikeshare_wfl_2 &lt;- workflow() |&gt; add_recipe (bikeshare_rec_2) |&gt; add_model (bikeshare_mod)\nbikeshare_wfl_3 &lt;- workflow() |&gt; add_recipe (bikeshare_rec_3) |&gt; add_model (bikeshare_mod)\n\nNow we are using the CV data to fit the three different models.\n\nbikeshare_cv_fit_1 &lt;- bikeshare_wfl_1 |&gt; fit_resamples (bikeshare_10_fold)\n\n→ A | warning: prediction from rank-deficient fit; consider predict(., rankdeficient=\"NA\")\n\n\nThere were issues with some computations   A: x1\n\n\nThere were issues with some computations   A: x5\n\n\nThere were issues with some computations   A: x10\n\n\n\n\nbikeshare_cv_fit_2 &lt;- bikeshare_wfl_2 |&gt; fit_resamples (bikeshare_10_fold)\n\n→ A | warning: prediction from rank-deficient fit; consider predict(., rankdeficient=\"NA\")\n\n\nThere were issues with some computations   A: x5\n\n\nThere were issues with some computations   A: x10\n\n\n\n\nbikeshare_cv_fit_3 &lt;- bikeshare_wfl_3 |&gt; fit_resamples (bikeshare_10_fold)\n\n→ A | warning: prediction from rank-deficient fit; consider predict(., rankdeficient=\"NA\")\n\n\nThere were issues with some computations   A: x4\n\n\nThere were issues with some computations   A: x10\n\n\n\n\nrbind ((bikeshare_cv_fit_1 |&gt; collect_metrics()),\n(bikeshare_cv_fit_2 |&gt; collect_metrics()),\n(bikeshare_cv_fit_3 |&gt; collect_metrics()))\n\n# A tibble: 6 × 6\n  .metric .estimator     mean     n   std_err .config             \n  &lt;chr&gt;   &lt;chr&gt;         &lt;dbl&gt; &lt;int&gt;     &lt;dbl&gt; &lt;chr&gt;               \n1 rmse    standard   4136.       10 236.      Preprocessor1_Model1\n2 rsq     standard      0.824    10   0.0188  Preprocessor1_Model1\n3 rmse    standard   3244.       10 240.      Preprocessor1_Model1\n4 rsq     standard      0.892    10   0.0134  Preprocessor1_Model1\n5 rmse    standard   3063.       10 183.      Preprocessor1_Model1\n6 rsq     standard      0.905    10   0.00994 Preprocessor1_Model1\n\n\nWell, our data showed adding some interaction terms and polynomial terms indeed improved the model, as the mean RMSE reduced, but the value of RSQ did not reduce, meaning adding a lot of interaction term did not improve too much of our model. Now fit the third model into our entire training set.\n\nMLR_final &lt;- bikeshare_wfl_3 |&gt; fit (bikesharetrain)\ntidy (MLR_final)\n\n# A tibble: 33 × 5\n   term             estimate std.error statistic     p.value\n   &lt;chr&gt;               &lt;dbl&gt;     &lt;dbl&gt;     &lt;dbl&gt;       &lt;dbl&gt;\n 1 (Intercept)      590688.  167427.       3.53  0.000504   \n 2 Date                -32.1      9.40    -3.42  0.000750   \n 3 TempC_daily       -2730.    3529.      -0.774 0.440      \n 4 Humidity_daily    -2455.    1312.      -1.87  0.0626     \n 5 Visibility_daily    129.     270.       0.477 0.634      \n 6 DewtempC_daily     7488.    4000.       1.87  0.0624     \n 7 Date_dowMon       -1839.     659.      -2.79  0.00570    \n 8 Date_dowSat       -2541.     655.      -3.88  0.000135   \n 9 Date_dowSun       -3481.     656.      -5.31  0.000000257\n10 Date_dowThu        -362.     627.      -0.577 0.565      \n# ℹ 23 more rows\n\n\nJudging from the p-value, the most significant beta is from the interaction between Season_Summer and TempC_daily, suggesting in summer days, increased temperature is likely to reduce the number of rented bike (Take note all numeric value were standardized here). Sundays are definitely unpopular days since being Sunday is predicted to reduce the number of rented bike by 3601 per day. As we may predict, summer days are much more popular than winter days to ride a bike, and rainfall is sure downpour people’s enthusiasm to ride a bike as well."
  }
]